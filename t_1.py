'''–ó–∞–¥–∞–Ω–∏–µ ‚Ññ6
üìå –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∏–∑ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –∏ –ø–æ–ª—É—á–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥
–ø—É—Ç—å –¥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –Ω–∞ –ü–ö.
üìå –°–æ–±–µ—Ä–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º –≤ –≤–∏–¥–µ –æ–±—ä–µ–∫—Ç–æ–≤ namedtuple.
üìå –ö–∞–∂–¥—ã–π –æ–±—ä–µ–∫—Ç —Ö—Ä–∞–Ω–∏—Ç:
‚óã –∏–º—è —Ñ–∞–π–ª–∞ –±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–∞–ª–æ–≥–∞,
‚óã —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ, –µ—Å–ª–∏ —ç—Ç–æ —Ñ–∞–π–ª,
‚óã —Ñ–ª–∞–≥ –∫–∞—Ç–∞–ª–æ–≥–∞,
‚óã –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–∞—Ç–∞–ª–æ–≥–∞.
üìå –í –ø—Ä–æ—Ü–µ—Å—Å–µ —Å–±–æ—Ä–∞ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –∏—Å–ø–æ–ª—å–∑—É—è
–ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ.'''

import logging
import argparse
import os
from collections import namedtuple

logging.basicConfig(filename='log_1.log',
                    filemode='a',
                    encoding='utf-8',
                    format='{levelname} - {asctime} : {msg}',
                    style='{',
                    level=logging.INFO)

logger = logging.getLogger(__name__)

parser = argparse.ArgumentParser(
    description="–ü—Ä–∏–Ω–∏–º–∞–µ–º —Å—Ç—Ä–æ–∫—É —Å –ø—É—Ç—ë–º –¥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏.")
parser.add_argument("dir_path", nargs="?", type=str,
                    help="–£–∫–∞–∑–∞—Ç—å –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ. "
                         "–ï—Å–ª–∏ –≤ –Ω–∞–ø–∏—Å–∞–Ω–∏–∏ –ø—É—Ç–∏ –∏–º–µ—é—Ç—Å—è –ø—Ä–æ–±–µ–ª—ã - –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–≤–æ–π–Ω—ã–µ –∫–∞–≤—ã—á–∫–∏.")

args = parser.parse_args()

if not args.dir_path:
    parser.error("–ü—É—Ç—å –∫ –ø–∞–ø–∫–µ –Ω–µ –±—ã–ª –ø–µ—Ä–µ–¥–∞–Ω!"
                 "\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.")
elif os.path.exists(args.dir_path):
    print(args)
else:
    parser.error("–£–∫–∞–∑–∞–Ω–Ω—ã–π –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!"
                 "\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –ø—É—Ç–∏ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.")

data_list = [(dirs, folders, files) for dirs, folders, files in
             os.walk(args.dir_path)]
# print(*data_list)
clas_list = []

Data = namedtuple('Data',
                  ['file_name', 'file_exten', 'dir_flag', 'parent_dir'])
for i in range(0, len(data_list)):
    parent_dir = data_list[i][0]
    dir_list = data_list[i][1]
    file_list = data_list[i][2]

    for el in dir_list:
        dir_flag = 'Yes'
        file_name = el
        file_exten = ''
        d = Data(file_name, file_exten, dir_flag, parent_dir)
        clas_list.append(d)
        logger.info(
            f'{file_name}, {file_exten}, {dir_flag}, {parent_dir}')

    for item in file_list:
        dir_flag = 'No'
        try:
            file_name, file_exten = item.split('.')
        except Exception:
            *file_name, file_exten = item.split('.')

        d = Data(file_name, file_exten, dir_flag, parent_dir)
        clas_list.append(d)
        logger.info(
            f'{file_name}, {file_exten}, {dir_flag}, {parent_dir}')

print(*clas_list, sep="\n")
